import{_ as g}from"./auth-c67ad916.js";import{f as n,E as i,b as o}from"./index-a4776ee8.js";class f{constructor(){const s=window.location.hostname==="dreamspace.tylerstewart.co.za";this.apiBase=s?"https://func-dreamspace-prod.azurewebsites.net/api":"/api",this.useCosmosDB=s||!!({}.VITE_COSMOS_ENDPOINT&&{}.VITE_APP_ENV==="production"),console.log("👥 People Service initialized:",{useCosmosDB:this.useCosmosDB,isLiveSite:s,hostname:window.location.hostname,apiBase:this.apiBase,environment:{}.VITE_APP_ENV})}async getAllUsers(){try{if(this.useCosmosDB){const s=await fetch(`${this.apiBase}/getAllUsers`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!s.ok)return n(i.NETWORK,`HTTP ${s.status}: ${s.statusText}`);const e=await s.json();return console.log("✅ Retrieved users from Cosmos DB:",e.users?.length||0),o(e.users||[])}else{const s=await this.getLocalStorageUsers();return console.log("📱 Retrieved users from localStorage:",s.length),o(s)}}catch(s){console.error("❌ Error fetching users:",s);const e=await this.getLocalStorageUsers();return o(e)}}async getTeamRelationships(){try{if(this.useCosmosDB){const s=await fetch(`${this.apiBase}/getTeamRelationships`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!s.ok)return n(i.NETWORK,`HTTP ${s.status}: ${s.statusText}`);const e=await s.json();return console.log("✅ Retrieved team relationships from Cosmos DB:",e.teams?.length||0),o(e.teams||[])}else{const s=await this.getLocalStorageTeams();return console.log("📱 Retrieved team relationships from localStorage:",s.length),o(s)}}catch(s){console.error("❌ Error fetching team relationships:",s);const e=await this.getLocalStorageTeams();return o(e)}}async getCoachingAlerts(s){try{if(this.useCosmosDB){const e=await fetch(`${this.apiBase}/getCoachingAlerts/${s}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)return n(i.NETWORK,`HTTP ${e.status}: ${e.statusText}`);const t=await e.json();return console.log("✅ Retrieved coaching alerts from Cosmos DB:",t.alerts?.length||0),o(t.alerts||[])}else{const e=await this.getLocalStorageCoachingAlerts(s);return console.log("📱 Retrieved coaching alerts from localStorage:",e.length),o(e)}}catch(e){return console.error("❌ Error fetching coaching alerts:",e),n(i.UNKNOWN,e.message||"Failed to fetch coaching alerts")}}async getTeamMetrics(s){console.log("🔍 getTeamMetrics called:",{managerId:s,useCosmosDB:this.useCosmosDB,environment:{}.VITE_APP_ENV,cosmosEndpoint:{}.VITE_COSMOS_ENDPOINT?"SET":"NOT SET"});try{if(this.useCosmosDB){const e=await fetch(`${this.apiBase}/getTeamMetrics/${s}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)return n(i.NETWORK,`HTTP ${e.status}: ${e.statusText}`);const t=await e.json();return console.log("✅ Retrieved team metrics from Cosmos DB for manager:",s),console.log("🔍 Team metrics response:",{hasResult:!!t,hasMetrics:!!t.metrics,metricsType:typeof t.metrics,teamSize:t.metrics?.teamSize,teamMembers:t.metrics?.teamMembers?.length}),o(t.metrics)}else{const e=await this.getLocalStorageTeamMetrics(s);return console.log("📱 Retrieved team metrics from localStorage for manager:",s),o(e)}}catch(e){return console.error("❌ Error fetching team metrics:",e),n(i.UNKNOWN,e.message||"Failed to fetch team metrics")}}async promoteUserToCoach(s,e){try{if(this.useCosmosDB){const t=await fetch(`${this.apiBase}/promoteUserToCoach`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:s,teamName:e,timestamp:new Date().toISOString()})});if(!t.ok)return n(i.NETWORK,`HTTP ${t.status}: ${t.statusText}`);const r=await t.json();return console.log("✅ User promoted to coach in Cosmos DB:",s),o(r)}else{const t=await this.promoteUserLocalStorage(s,e);return console.log("📱 User promoted to coach in localStorage:",s),o({success:t})}}catch(t){return console.error("❌ Error promoting user to coach:",t),n(i.UNKNOWN,t.message||"Failed to promote user to coach")}}async assignUserToCoach(s,e){try{if(this.useCosmosDB){const t=await fetch(`${this.apiBase}/assignUserToCoach`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:s,coachId:e,timestamp:new Date().toISOString()})});if(!t.ok)return n(i.NETWORK,`HTTP ${t.status}: ${t.statusText}`);const r=await t.json();return console.log("✅ User assigned to coach in Cosmos DB:",{userId:s,coachId:e}),o(r)}else{const t=await this.assignUserLocalStorage(s,e);return console.log("📱 User assigned to coach in localStorage:",{userId:s,coachId:e}),o({success:t})}}catch(t){return console.error("❌ Error assigning user to coach:",t),n(i.UNKNOWN,t.message||"Failed to assign user to coach")}}async unassignUserFromTeam(s,e){try{if(this.useCosmosDB){const t=await fetch(`${this.apiBase}/unassignUserFromTeam`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:s,coachId:e,timestamp:new Date().toISOString()})});if(!t.ok)return n(i.NETWORK,`HTTP ${t.status}: ${t.statusText}`);const r=await t.json();return console.log("✅ User unassigned from coach in Cosmos DB:",{userId:s,coachId:e}),o(r)}else{const t=await this.unassignUserLocalStorage(s,e);return console.log("📱 User unassigned from coach in localStorage:",{userId:s,coachId:e}),o({success:t})}}catch(t){return console.error("❌ Error unassigning user from coach:",t),n(i.UNKNOWN,t.message||"Failed to unassign user from coach")}}async updateUserProfile(s,e){try{if(this.useCosmosDB){const t=await fetch(`${this.apiBase}/updateUserProfile/${s}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)return n(i.NETWORK,`HTTP ${t.status}: ${t.statusText}`);const r=await t.json();return console.log("✅ User profile updated in Cosmos DB:",s),o(r)}else{const t=await this.updateUserProfileLocalStorage(s,e);return console.log("📱 User profile updated in localStorage:",s),o({success:t})}}catch(t){return console.error("❌ Error updating user profile:",t),n(i.UNKNOWN,t.message||"Failed to update user profile")}}async replaceTeamCoach(s,e,t=null,r="unassigned",c=null){try{if(this.useCosmosDB){const a=await fetch(`${this.apiBase}/replaceTeamCoach`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldCoachId:s,newCoachId:e,teamName:t,demoteOption:r,assignToTeamId:c,timestamp:new Date().toISOString()})});if(!a.ok)return n(i.NETWORK,`HTTP ${a.status}: ${a.statusText}`);const l=await a.json();return console.log("✅ Coach replaced in Cosmos DB:",{oldCoachId:s,newCoachId:e,teamName:t,demoteOption:r,assignToTeamId:c}),o(l)}else{const a=await this.replaceCoachLocalStorage(s,e,t,r,c);return console.log("📱 Coach replaced in localStorage:",{oldCoachId:s,newCoachId:e,teamName:t,demoteOption:r,assignToTeamId:c}),o({success:a})}}catch(a){return console.error("❌ Error replacing team coach:",a),n(i.UNKNOWN,a.message||"Failed to replace team coach")}}async getLocalStorageUsers(){const s=localStorage.getItem("dreamspace_all_users");if(s)return JSON.parse(s);try{const{allUsers:e}=await g(()=>import("./index-a4776ee8.js").then(t=>t.m),["assets/index-a4776ee8.js","assets/vendor-e182443c.js","assets/auth-c67ad916.js","assets/ui-9fedfdd7.js","assets/index-33578cc9.css"]);return localStorage.setItem("dreamspace_all_users",JSON.stringify(e)),e}catch(e){return console.error("Error loading mock user data:",e),[]}}async getLocalStorageTeams(){const s=localStorage.getItem("dreamspace_team_relationships");if(s)return JSON.parse(s);try{const{teamRelationships:e}=await g(()=>import("./index-a4776ee8.js").then(t=>t.m),["assets/index-a4776ee8.js","assets/vendor-e182443c.js","assets/auth-c67ad916.js","assets/ui-9fedfdd7.js","assets/index-33578cc9.css"]);return localStorage.setItem("dreamspace_team_relationships",JSON.stringify(e)),e}catch(e){return console.error("Error loading mock team data:",e),[]}}async getLocalStorageCoachingAlerts(s){try{const{getCoachingAlerts:e}=await g(()=>import("./index-a4776ee8.js").then(t=>t.m),["assets/index-a4776ee8.js","assets/vendor-e182443c.js","assets/auth-c67ad916.js","assets/ui-9fedfdd7.js","assets/index-33578cc9.css"]);return e(s)}catch(e){return console.error("Error loading coaching alerts:",e),[]}}async getLocalStorageTeamMetrics(s){try{const{getTeamMetrics:e}=await g(()=>import("./index-a4776ee8.js").then(t=>t.m),["assets/index-a4776ee8.js","assets/vendor-e182443c.js","assets/auth-c67ad916.js","assets/ui-9fedfdd7.js","assets/index-33578cc9.css"]);return e(s)}catch(e){return console.error("Error loading team metrics:",e),null}}async promoteUserLocalStorage(s,e){const t=await this.getLocalStorageTeams();await this.getLocalStorageUsers();const r={managerId:s,teamMembers:[],teamName:e,managerRole:"Dream Coach",createdAt:new Date().toISOString()};return t.push(r),localStorage.setItem("dreamspace_team_relationships",JSON.stringify(t)),!0}async assignUserLocalStorage(s,e){const t=await this.getLocalStorageTeams(),r=t.find(c=>c.managerId===e);return r&&!r.teamMembers.includes(s)?(r.teamMembers.push(s),localStorage.setItem("dreamspace_team_relationships",JSON.stringify(t)),!0):!1}async unassignUserLocalStorage(s,e){const t=await this.getLocalStorageTeams(),r=t.find(c=>c.managerId===e);return r&&r.teamMembers.includes(s)?(r.teamMembers=r.teamMembers.filter(c=>c!==s),localStorage.setItem("dreamspace_team_relationships",JSON.stringify(t)),!0):!1}async updateUserProfileLocalStorage(s,e){const t=await this.getLocalStorageUsers(),r=t.findIndex(c=>c.id===s);return r!==-1?(t[r]={...t[r],name:e.name||t[r].name,title:e.title||t[r].title,office:e.office||t[r].office,department:e.department||t[r].department,roles:e.roles||t[r].roles,manager:e.manager||t[r].manager,lastUpdated:new Date().toISOString()},localStorage.setItem("dreamspace_all_users",JSON.stringify(t)),!0):!1}async replaceCoachLocalStorage(s,e,t=null,r="unassigned",c=null){const a=await this.getLocalStorageTeams(),l=a.findIndex(m=>m.managerId===s);if(l===-1)return!1;const h=a[l],u=a.findIndex(m=>m.managerId===e);let p=[...h.teamMembers];if(u!==-1){const m=new Set(a[u].teamMembers);p=[...a[u].teamMembers,...h.teamMembers.filter(S=>!m.has(S))],a.splice(u,1)}return a[l]={...h,managerId:e,teamName:t||`Coach ${e}'s Team`,teamMembers:p,lastModified:new Date().toISOString()},localStorage.setItem("dreamspace_team_relationships",JSON.stringify(a)),!0}async initializeLocalStorage(){if(!this.useCosmosDB)try{const{allUsers:s,teamRelationships:e}=await g(()=>import("./index-a4776ee8.js").then(t=>t.m),["assets/index-a4776ee8.js","assets/vendor-e182443c.js","assets/auth-c67ad916.js","assets/ui-9fedfdd7.js","assets/index-33578cc9.css"]);localStorage.getItem("dreamspace_all_users")||(localStorage.setItem("dreamspace_all_users",JSON.stringify(s)),console.log("📱 Initialized users in localStorage")),localStorage.getItem("dreamspace_team_relationships")||(localStorage.setItem("dreamspace_team_relationships",JSON.stringify(e)),console.log("📱 Initialized team relationships in localStorage"))}catch(s){console.error("❌ Error initializing localStorage:",s)}}}const _=new f;export{_ as p};
